stages:
  - build
  - test
  - package
  - deploy

variables:
  # 기본 환경 변수 설정
  DOCKER_REPOSITORY: gmna974/deployment
  SPRING_DATASOURCE_URL: jdbc:mariadb://svc.sel4.cloudtype.app:30333/trip_helper
  SPRING_DATASOURCE_USERNAME: rmsals
  SPRING_DATASOURCE_PASSWORD: 1q2w3e
  SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.mariadb.jdbc.Driver

build:
  stage: build
  image: gradle:jdk17-alpine
  script:
    - echo "Building the application..."
    - gradle clean build -x test
  artifacts:
    paths:
      - backend/build/libs/*.jar
    expire_in: 1 hour

test:
  stage: test
  image: gradle:jdk17-alpine
  script:
    - echo "Running tests..."
    - gradle test
  artifacts:
    paths:
      - backend/build/reports/tests/

package:
  stage: package
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - echo "Building Docker image..."
    - docker build --build-arg SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
                  --build-arg SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
                  --build-arg SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
                  --build-arg SPRING_DATASOURCE_DRIVER_CLASS_NAME=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}
                  -t ${DOCKER_REPOSITORY}:$CI_COMMIT_SHORT_SHA .
    - echo "Logging in to Docker Hub..."
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - echo "Pushing the Docker image..."
    - docker push ${DOCKER_REPOSITORY}:$CI_COMMIT_SHORT_SHA
    - docker tag ${DOCKER_REPOSITORY}:$CI_COMMIT_SHORT_SHA ${DOCKER_REPOSITORY}:latest
    - docker push ${DOCKER_REPOSITORY}:latest
  only:
    - main

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $DEPLOYMENT_SERVER_IP >> ~/.ssh/known_hosts
  script:
    - echo "Deploying the application..."
    - ssh $DEPLOYMENT_USER@$DEPLOYMENT_SERVER_IP "docker pull ${DOCKER_REPOSITORY}:latest"
    - ssh $DEPLOYMENT_USER@$DEPLOYMENT_SERVER_IP "docker stop app-container || true"
    - ssh $DEPLOYMENT_USER@$DEPLOYMENT_SERVER_IP "docker rm app-container || true"
    - >
      ssh $DEPLOYMENT_USER@$DEPLOYMENT_SERVER_IP "docker run -d --name app-container 
      -p 8080:8080 
      -e SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL} 
      -e SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME} 
      -e SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD} 
      -e SPRING_DATASOURCE_DRIVER_CLASS_NAME=${SPRING_DATASOURCE_DRIVER_CLASS_NAME} 
      ${DOCKER_REPOSITORY}:latest"
  only:
    - main
  environment:
    name: production
    url: http://$DEPLOYMENT_SERVER_IP:8080